# This configuration file is based on nginx.conf.default from Nginx v1.16.1.
#
# The following changes are made:
# - Number of worker processes in increased from 1 to 4
# - Number of worker connections is decrease from 1024 to 768 (because Linux by default
#   limits FDs to 1024, and Gramine uses ~100 FDs for its own purposes, so we are left with
#   about 900 FDs available for Nginx application itself)
# - Listening port is changed from 80 to LISTEN_PORT
# - Listening host is changed from localhost to LISTEN_HOST
# - SSL/HTTPS with default params is enabled via LISTEN_SSL_PORT
# - Added `access_log off` to disable verbose log info (skewed perf results)
# - Added `daemon off` to run Nginx in the foreground

# Uncomment "user nobody;" below to switch to this user. If you run under root, use
# "user root;" instead. Typically there is no need to specify a non-default user.
#user  nobody;
worker_processes 1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  768;
}

http {
    include            mime.types;
    default_type       application/octet-stream;
    sendfile           on;
    keepalive_timeout  65;

    geoip_country         /usr/share/GeoIP/GeoIP.dat;
    geoip_proxy           0.0.0.0/0;
    geoip_proxy           ::/0;
    geoip_proxy_recursive on;

    map $http_cf_ipcountry  $country_code{
        default   $http_cf_ipcountry;
        ""        $geoip_country_code;
    }

    server {
        listen  80;
        server_name 127.0.0.1;

        location / {


            proxy_pass http://umami:3000/;

            proxy_set_header Host $host;
            proxy_set_header True-Client-IP     $remote_addr;
            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $remote_addr;
            proxy_set_header X-Request-Id       $request_id;

            proxy_set_header CF-IPCountry $country_code;

            proxy_http_version 1.1;
            proxy_set_header Upgrade            $http_upgrade;
            proxy_set_header Connection         $http_connection;
            proxy_pass_request_headers  on;
            proxy_request_buffering off;
            proxy_buffering off;
        }

        access_log /dev/stdout;
    }
}
